CREATE OR REPLACE PACKAGE BODY READ_EXCEL_FILES_API  
IS


PROCEDURE CREATE_DIRECTORY(p_dir_name VARCHAR2, p_dir_value VARCHAR)  IS
BEGIN
EXECUTE IMMEDIATE 'CREATE OR REPLACE DIRECTORY ' || p_dir_name ||
' AS ''' || p_dir_value || '''';

END;

PROCEDURE GET_HEADERS(p_dir VARCHAR2, p_file_name VARCHAR2, p_file_no NUMBER) IS 
NAME_IN_ENGLISH VARCHAR2(255);
SH_CELL VARCHAR2(255);
FILE_ID NUMBER;
SHEET_ID NUMBER;
RECORD_NUMBER NUMBER;
COLUMN_NAME_ARABIC VARCHAR2(255); 
CURSOR HEADERS_CUR IS SELECT * FROM table(as_read_xlsx.read(as_read_xlsx.file2blob(p_dir,p_file_name)))
WHERE ROW_NR = 1;
HEADERS_REC HEADERS_CUR%ROWTYPE;
BEGIN


FOR HEADER IN HEADERS_CUR LOOP

BEGIN
SELECT COLUMN_NAME_ENGLISH INTO NAME_IN_ENGLISH
FROM CLAIMS_COLUMN_TRANSLATIONS WHERE TRIM(HEADER.STRING_VAL) = COLUMN_NAME_ARABIC;
EXCEPTION WHEN OTHERS THEN 
NULL;
END;

IF NAME_IN_ENGLISH IS NOT NULL THEN
INSERT INTO SHEET_HEADERS(CELL,SHEET_ID, FILE_ID, RECORD_NUMBER, HEADER_IN_ENGLISH, HEADER_IN_ARABIC, MIGRATED,SHEET_NAME)
VALUES(HEADER.CELL,HEADER.SHEET_NR,p_file_no,HEADER.ROW_NR,NAME_IN_ENGLISH, HEADER.STRING_VAL, 'Y',HEADER.SHEET_NAME);
ELSE 
INSERT INTO SHEET_HEADERS(CELL,SHEET_ID, FILE_ID, RECORD_NUMBER, HEADER_IN_ENGLISH, HEADER_IN_ARABIC, MIGRATED,SHEET_NAME)
VALUES(HEADER.CELL,HEADER.SHEET_NR,p_file_no,HEADER.ROW_NR,'HEADER_WITH_NO_NAME', HEADER.STRING_VAL, 'N',HEADER.SHEET_NAME);
END IF; 

NAME_IN_ENGLISH := NULL;
END LOOP;
 
END;


 
PROCEDURE READ_FROM_EXCEL IS
MATCHED_HEADER VARCHAR(255);
TEMP_VALUE  VARCHAR(4000);
WITH_NO_HEADERS_TEMP VARCHAR2(255);
RECORD_N  NUMBER;
TEMP_NUMBER NUMBER;
FILE_N NUMBER; 
  
l_sql  long;

CURSOR EXCEL_FILE_C IS SELECT *  from table(as_read_xlsx.read(as_read_xlsx.file2blob('DOC','city_lab.xlsx'))),
NON_EMPTY_ROWS_TEMP WHERE ROW_NR <>1 AND ROW_NR = ROW_NO;
EXCEL_FILE_R EXCEL_FILE_C%ROWTYPE;

BEGIN
OPEN EXCEL_FILE_C; 




LOOP
FETCH EXCEL_FILE_C INTO EXCEL_FILE_R;
EXIT WHEN EXCEL_FILE_C%NOTFOUND;

BEGIN
SELECT SHEET_ID INTO TEMP_NUMBER FROM CLM_TRX
WHERE RECORD_NUMBER = EXCEL_FILE_R.ROW_NR AND FILE_ID = 352 AND SHEET_ID =EXCEL_FILE_R.SHEET_NR;
EXCEPTION WHEN OTHERS THEN 
NULL;
END;



IF TEMP_NUMBER IS NULL THEN 
INSERT INTO CLM_TRX(FILE_ID,SHEET_ID, RECORD_NUMBER)
VALUES(352,EXCEL_FILE_R.SHEET_NR,EXCEL_FILE_R.ROW_NR);
 
END IF;

BEGIN
SELECT HEADER_IN_ENGLISH INTO MATCHED_HEADER
FROM SHEET_HEADERS HEADERS
WHERE regexp_substr(EXCEL_FILE_R.CELL, '[A-Z]*') = regexp_substr(HEADERS.CELL, '[A-Z]*') AND FILE_ID = 352 AND
SHEET_ID = EXCEL_FILE_R.SHEET_NR;
EXCEPTION
WHEN OTHERS THEN 
MATCHED_HEADER := 'HEADER_WITH_NO_NAME';
END;



BEGIN
SELECT RECORD_NUMBER INTO TEMP_NUMBER FROM CLM_TRX
WHERE RECORD_NUMBER = EXCEL_FILE_R.ROW_NR AND FILE_ID = 352 AND SHEET_ID =EXCEL_FILE_R.SHEET_NR;
EXCEPTION WHEN OTHERS THEN 
NULL;
END;



IF TEMP_NUMBER IS NULL THEN 
INSERT INTO CLM_TRX(FILE_ID,SHEET_ID,RECORD_NUMBER)
VALUES(352,1,EXCEL_FILE_R.ROW_NR);
END IF;

IF EXCEL_FILE_R.STRING_VAL IS NOT NULL THEN
TEMP_VALUE := EXCEL_FILE_R.STRING_VAL;
ELSIF EXCEL_FILE_R.NUMBER_VAL IS NOT NULL THEN
TEMP_VALUE := EXCEL_FILE_R.NUMBER_VAL;
ELSIF EXCEL_FILE_R.DATE_VAL IS NOT NULL THEN
TEMP_VALUE := EXCEL_FILE_R.DATE_VAL;
ELSE
TEMP_VALUE := NULL;
END IF;


IF (MATCHED_HEADER = 'HEADER_WITH_NO_NAME' AND TRIM(TEMP_VALUE) IS NOT NULL) THEN 
BEGIN
SELECT HEADER_WITH_NO_NAME INTO WITH_NO_HEADERS_TEMP  FROM CLM_TRX 
WHERE FILE_ID = 352 AND SHEET_ID =EXCEL_FILE_R.SHEET_NR AND RECORD_NUMBER = EXCEL_FILE_R.ROW_NR;
EXCEPTION 
WHEN OTHERS THEN NULL;
END;
TEMP_VALUE := WITH_NO_HEADERS_TEMP ||', '|| TEMP_VALUE|| ',C:' || EXCEL_FILE_R.CELL || ',R_N:' ||  EXCEL_FILE_R.ROW_NR
||',S_N:'|| EXCEL_FILE_R.SHEET_NR;
l_sql := 'UPDATE CLM_TRX SET ' || MATCHED_HEADER || ' = :TEMP_VALUE, MIGRATED_YNE =:MIGRATED_YNE
 WHERE FILE_ID = 352 AND SHEET_ID = :SHEET_NR AND RECORD_NUMBER = :ROW_NR ';
EXECUTE IMMEDIATE l_sql USING TEMP_VALUE,'Y_WITH_NULLS', EXCEL_FILE_R.SHEET_NR, EXCEL_FILE_R.ROW_NR;

WITH_NO_HEADERS_TEMP := NULL;
ELSE 
l_sql := 'UPDATE CLM_TRX SET ' || MATCHED_HEADER || ' = :TEMP_VALUE,MIGRATED_YNE =:MIGRATED_YNE
 WHERE FILE_ID = 352 AND SHEET_ID = :SHEET_NR AND RECORD_NUMBER = :ROW_NR ';
EXECUTE IMMEDIATE l_sql USING TEMP_VALUE,' ', EXCEL_FILE_R.SHEET_NR, EXCEL_FILE_R.ROW_NR;

END IF;


TEMP_NUMBER := NULL;


END LOOP;
--DELETE NON_EMPTY_ROWS_TEMP;
END;



PROCEDURE GET_FILE_INFO IS 

CURSOR C_FILE_INFO IS SELECT * FROM CLM_DIRS_AND_FILES;
R_FILE_INFO C_FILE_INFO%ROWTYPE;

BEGIN
OPEN C_FILE_INFO;
LOOP
FETCH C_FILE_INFO INTO R_FILE_INFO;
EXIT WHEN C_FILE_INFO%NOTFOUND;


CREATE_DIRECTORY(R_FILE_INFO.DIRECTORY,R_FILE_INFO.DIRECTORY);
GET_HEADERS(R_FILE_INFO.DIRECTORY,R_FILE_INFO.FILE_NAME, R_FILE_INFO.FILE_ID);

/*INSERT INTO TEST
VALUES(R_FILE_INFO.DIRECTORY,R_FILE_INFO.FILE_NAME, R_FILE_INFO.FILE_ID);*/

END LOOP;




END;



END;